var AS2SymbolAdapter = (function () {
    function AS2SymbolAdapter(adaptee) {
        this._adaptee = adaptee;
    }
    Object.defineProperty(AS2SymbolAdapter.prototype, "adaptee", {
        get: function () {
            return this._adaptee;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AS2SymbolAdapter.prototype, "_rotation", {
        get: function () {
            return this._adaptee.rotationZ;
        },
        set: function (value) {
            this._adaptee.rotationZ = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AS2SymbolAdapter.prototype, "_x", {
        get: function () {
            return this._adaptee.x;
        },
        set: function (value) {
            this._adaptee.x = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AS2SymbolAdapter.prototype, "_y", {
        get: function () {
            return this._adaptee.y;
        },
        set: function (value) {
            this._adaptee.y = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AS2SymbolAdapter.prototype, "_xscale", {
        get: function () {
            return this._adaptee.scaleX;
        },
        set: function (value) {
            this._adaptee.scaleX = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AS2SymbolAdapter.prototype, "_yscale", {
        get: function () {
            return this._adaptee.scaleY;
        },
        set: function (value) {
            this._adaptee.scaleY = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AS2SymbolAdapter.prototype, "_parent", {
        get: function () {
            var parentMC = this._adaptee.parent;
            return parentMC.adapter;
        },
        enumerable: true,
        configurable: true
    });
    AS2SymbolAdapter.prototype.getDepth = function () {
        return this._adaptee.z;
    };
    return AS2SymbolAdapter;
})();
module.exports = AS2SymbolAdapter;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1wbGF5ZXIvbGliL2FkYXB0ZXJzL0FTMlN5bWJvbEFkYXB0ZXIudHMiXSwibmFtZXMiOlsiQVMyU3ltYm9sQWRhcHRlciIsIkFTMlN5bWJvbEFkYXB0ZXIuY29uc3RydWN0b3IiLCJBUzJTeW1ib2xBZGFwdGVyLmFkYXB0ZWUiLCJBUzJTeW1ib2xBZGFwdGVyLl9yb3RhdGlvbiIsIkFTMlN5bWJvbEFkYXB0ZXIuX3giLCJBUzJTeW1ib2xBZGFwdGVyLl95IiwiQVMyU3ltYm9sQWRhcHRlci5feHNjYWxlIiwiQVMyU3ltYm9sQWRhcHRlci5feXNjYWxlIiwiQVMyU3ltYm9sQWRhcHRlci5fcGFyZW50IiwiQVMyU3ltYm9sQWRhcHRlci5nZXREZXB0aCJdLCJtYXBwaW5ncyI6IkFBT0EsSUFBTSxnQkFBZ0I7SUE4Q2xCQSxTQTlDRUEsZ0JBQWdCQSxDQThDTkEsT0FBZ0NBO1FBRXhDQyxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxPQUFPQSxDQUFDQTtJQUM1QkEsQ0FBQ0E7SUFFREQsc0JBQUlBLHFDQUFPQTthQUFYQTtZQUVJRSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQTtRQUN6QkEsQ0FBQ0E7OztPQUFBRjtJQUVEQSxzQkFBSUEsdUNBQVNBO2FBQWJBO1lBRUlHLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLFNBQVNBLENBQUNBO1FBQ25DQSxDQUFDQTthQUVESCxVQUFjQSxLQUFjQTtZQUV4QkcsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDcENBLENBQUNBOzs7T0FMQUg7SUFPREEsc0JBQUlBLGdDQUFFQTthQUFOQTtZQUVJSSxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUMzQkEsQ0FBQ0E7YUFFREosVUFBT0EsS0FBY0E7WUFFakJJLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLEdBQUdBLEtBQUtBLENBQUNBO1FBQzVCQSxDQUFDQTs7O09BTEFKO0lBT0RBLHNCQUFJQSxnQ0FBRUE7YUFBTkE7WUFFSUssTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDM0JBLENBQUNBO2FBRURMLFVBQU9BLEtBQWNBO1lBRWpCSyxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUM1QkEsQ0FBQ0E7OztPQUxBTDtJQU9EQSxzQkFBSUEscUNBQU9BO2FBQVhBO1lBRUlNLE1BQU1BLENBQUNBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLE1BQU1BLENBQUNBO1FBQ2hDQSxDQUFDQTthQUVETixVQUFZQSxLQUFjQTtZQUV0Qk0sSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsTUFBTUEsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDakNBLENBQUNBOzs7T0FMQU47SUFPREEsc0JBQUlBLHFDQUFPQTthQUtYQTtZQUVJTyxNQUFNQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxNQUFNQSxDQUFDQTtRQUNoQ0EsQ0FBQ0E7YUFSRFAsVUFBWUEsS0FBY0E7WUFFdEJPLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLE1BQU1BLEdBQUdBLEtBQUtBLENBQUNBO1FBQ2pDQSxDQUFDQTs7O09BQUFQO0lBT0RBLHNCQUFJQSxxQ0FBT0E7YUFBWEE7WUFFSVEsSUFBSUEsUUFBUUEsR0FBY0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsTUFBTUEsQ0FBQ0E7WUFDL0NBLE1BQU1BLENBQXNCQSxRQUFRQSxDQUFDQSxPQUFPQSxDQUFDQTtRQUNqREEsQ0FBQ0E7OztPQUFBUjtJQUVEQSxtQ0FBUUEsR0FBUkE7UUFFSVMsTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7SUFDM0JBLENBQUNBO0lBQ0xULHVCQUFDQTtBQUFEQSxDQXBIQSxBQW9IQ0EsSUFBQTtBQUVELEFBQTBCLGlCQUFqQixnQkFBZ0IsQ0FBQyIsImZpbGUiOiJhZGFwdGVycy9BUzJTeW1ib2xBZGFwdGVyLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFdmVudERpc3BhdGNoZXIgPSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL2V2ZW50cy9FdmVudERpc3BhdGNoZXJcIik7XG5pbXBvcnQgTWF0cml4ID0gcmVxdWlyZShcImF3YXlqcy1jb3JlL2xpYi9nZW9tL01hdHJpeFwiKTtcbmltcG9ydCBEaXNwbGF5T2JqZWN0Q29udGFpbmVyID0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9jb250YWluZXJzL0Rpc3BsYXlPYmplY3RDb250YWluZXJcIik7XG5cbmltcG9ydCBBUzJNb3ZpZUNsaXBBZGFwdGVyID0gcmVxdWlyZShcImF3YXlqcy1wbGF5ZXIvbGliL2FkYXB0ZXJzL0FTMk1vdmllQ2xpcEFkYXB0ZXJcIik7XG5pbXBvcnQgTW92aWVDbGlwID0gcmVxdWlyZShcImF3YXlqcy1wbGF5ZXIvbGliL2Rpc3BsYXkvTW92aWVDbGlwXCIpO1xuXG5jbGFzcyBBUzJTeW1ib2xBZGFwdGVyXG57XG4gICAgLy8gX2FscGhhXG4gICAgLy8gYmxlbmRNb2RlXG4gICAgLy8gY2FjaGVBc0JpdG1hcFxuICAgIC8vIGZpbHRlcnNcbiAgICAvLyBfZm9jdXNyZWN0OiBCb29sZWFuXG4gICAgLy8gX2hpZ2hxdWFsaXR5OiBOdW1iZXIgLy8gREVQUkVDQVRFRCBBTllXQVlcbiAgICAvLyBtZW51OiBDb250ZXh0TWVudVxuICAgIC8vIF9xdWFsaXR5OiBTdHJpbmdcbiAgICAvLyBzY2FsZTlHcmlkOiBSZWN0YW5nbGVcbiAgICAvLyBfc291bmRidWZ0aW1lOiBOdW1iZXJcbiAgICAvLyB0YWJFbmFibGVkOiBCb29sZWFuXG4gICAgLy8gdGFiSW5kZXg6IE51bWJlclxuICAgIC8vIF90YXJnZXQ6IFN0cmluZyAgW3JlYWQtb25seV1cbiAgICAvLyB0cmFja0FzTWVudTogQm9vbGVhblxuICAgIC8vIF91cmw6IFN0cmluZyBbcmVhZC1vbmx5XVxuICAgIC8vIHVzZUhhbmRDdXJzb3I6IEJvb2xlYW5cbiAgICAvLyBfdmlzaWJsZTogQm9vbGVhblxuXG4gICAgLy8gX2hlaWdodDogTnVtYmVyXG4gICAgLy8gX3dpZHRoOiBOdW1iZXJcblxuICAgIC8vIF94bW91c2U6IE51bWJlciBbcmVhZC1vbmx5XVxuICAgIC8vIF95bW91c2U6IE51bWJlciBbcmVhZC1vbmx5XVxuXG4gICAgLy8gX25hbWU6IFN0cmluZ1xuICAgIC8vIF9wYXJlbnQ6IE1vdmllQ2xpcFxuICAgIC8vIF94OiBudW1iZXJcbiAgICAvLyBfeTogbnVtYmVyXG4gICAgLy8gaWQgKHJlbmFtZWQgdG8gaW5zdGFuY2VJRClcblxuICAgIC8qcHVibGljIG9uRHJhZ091dCA6IEZ1bmN0aW9uO1xuICAgIHB1YmxpYyBvbkRyYWdPdmVyIDogRnVuY3Rpb247XG4gICAgcHVibGljIG9uS2V5RG93biA6IEZ1bmN0aW9uO1xuICAgIHB1YmxpYyBvbktleVVwIDogRnVuY3Rpb247XG4gICAgcHVibGljIG9uS2lsbEZvY3VzIDogRnVuY3Rpb247XG4gICAgcHVibGljIG9uUHJlc3MgOiBGdW5jdGlvbjtcbiAgICBwdWJsaWMgb25SZWxlYXNlIDogRnVuY3Rpb247XG4gICAgcHVibGljIG9uUmVsZWFzZU91dHNpZGUgOiBGdW5jdGlvbjtcbiAgICBwdWJsaWMgb25Sb2xsT3V0IDogRnVuY3Rpb247XG4gICAgcHVibGljIG9uUm9sbE92ZXIgOiBGdW5jdGlvbjtcbiAgICBwdWJsaWMgb25TZXRGb2N1cyA6IEZ1bmN0aW9uOyovXG5cbiAgICBwcml2YXRlIF9hZGFwdGVlIDogRGlzcGxheU9iamVjdENvbnRhaW5lcjtcblxuICAgIGNvbnN0cnVjdG9yKGFkYXB0ZWUgOiBEaXNwbGF5T2JqZWN0Q29udGFpbmVyKVxuICAgIHtcbiAgICAgICAgdGhpcy5fYWRhcHRlZSA9IGFkYXB0ZWU7XG4gICAgfVxuXG4gICAgZ2V0IGFkYXB0ZWUoKSA6IERpc3BsYXlPYmplY3RDb250YWluZXJcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hZGFwdGVlO1xuICAgIH1cblxuICAgIGdldCBfcm90YXRpb24oKSA6IG51bWJlclxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FkYXB0ZWUucm90YXRpb25aO1xuICAgIH1cblxuICAgIHNldCBfcm90YXRpb24odmFsdWUgOiBudW1iZXIpXG4gICAge1xuICAgICAgICB0aGlzLl9hZGFwdGVlLnJvdGF0aW9uWiA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldCBfeCgpIDogbnVtYmVyXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWRhcHRlZS54O1xuICAgIH1cblxuICAgIHNldCBfeCh2YWx1ZSA6IG51bWJlcilcbiAgICB7XG4gICAgICAgIHRoaXMuX2FkYXB0ZWUueCA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldCBfeSgpIDogbnVtYmVyXG4gICAge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWRhcHRlZS55O1xuICAgIH1cblxuICAgIHNldCBfeSh2YWx1ZSA6IG51bWJlcilcbiAgICB7XG4gICAgICAgIHRoaXMuX2FkYXB0ZWUueSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldCBfeHNjYWxlKCkgOiBudW1iZXJcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hZGFwdGVlLnNjYWxlWDtcbiAgICB9XG5cbiAgICBzZXQgX3hzY2FsZSh2YWx1ZSA6IG51bWJlcilcbiAgICB7XG4gICAgICAgIHRoaXMuX2FkYXB0ZWUuc2NhbGVYID0gdmFsdWU7XG4gICAgfVxuXG4gICAgc2V0IF95c2NhbGUodmFsdWUgOiBudW1iZXIpXG4gICAge1xuICAgICAgICB0aGlzLl9hZGFwdGVlLnNjYWxlWSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGdldCBfeXNjYWxlKCkgOiBudW1iZXJcbiAgICB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hZGFwdGVlLnNjYWxlWTtcbiAgICB9XG5cbiAgICBnZXQgX3BhcmVudCgpIDogQVMyTW92aWVDbGlwQWRhcHRlclxuICAgIHtcbiAgICAgICAgdmFyIHBhcmVudE1DID0gPE1vdmllQ2xpcD50aGlzLl9hZGFwdGVlLnBhcmVudDtcbiAgICAgICAgcmV0dXJuIDxBUzJNb3ZpZUNsaXBBZGFwdGVyPnBhcmVudE1DLmFkYXB0ZXI7XG4gICAgfVxuXG4gICAgZ2V0RGVwdGgoKSA6IG51bWJlclxuICAgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FkYXB0ZWUuejtcbiAgICB9XG59XG5cbmV4cG9ydCA9IEFTMlN5bWJvbEFkYXB0ZXI7Il19